name: Tag and Release

on:
  pull_request:
    types: [closed]

jobs:
  tag-and-release:
    if: |
     github.event.pull_request.merged == true &&
     startsWith(github.event.pull_request.title, 'build: bump lybic-sdk-version to')
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract tag name
        id: extract_tag
        run: |
          TAG_NAME=$(echo "${{ github.event.pull_request.title }}" | sed 's/build: bump lybic-sdk-version to //')
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Create and push tag
        run: |
          git tag ${{ steps.extract_tag.outputs.tag_name }}
          git push origin ${{ steps.extract_tag.outputs.tag_name }}

      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ steps.extract_tag.outputs.tag_name }} \
            --title "Release ${{ steps.extract_tag.outputs.tag_name }}" \
            --notes-file "CHANGELOGS/${{ steps.extract_tag.outputs.tag_name }}-release.md"

  publish-to-pypi:
    name: Publish Python Package to PyPI
    needs: tag-and-release
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/lybic
    permissions:
      id-token: write # Required for trusted publishing with OIDC

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install twine wheel setuptools build

    - name: Build package
      run: make build

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.LYBIC_PYPI_KEY }}
      run: make publish
